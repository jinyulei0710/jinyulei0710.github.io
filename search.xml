<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>初识http</title>
      <link href="/2020/11/28/Http/%E4%BA%86%E8%A7%A3http/"/>
      <url>/2020/11/28/Http/%E4%BA%86%E8%A7%A3http/</url>
      
        <content type="html"><![CDATA[<p>无论是后端开发还是前端开发,http都是一门必修课. 对于Android开发来说,Retrofit + OkHttp的方案已经成了官方标配.</p><p>但本文的主角不是它们,而是HttpURLConnection.但是HttpURLConnection跟OkHttp也有着密切的关系,在Android 4.4之后,是基于OkHttp实现的.</p><a id="more"></a><p>源码分析开始:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.io.OutputStream;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Date;</span><br><span class="line"><span class="keyword">import</span> java.util.StringTokenizer;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"><span class="keyword">import</span> java.security.Permission;</span><br><span class="line"><span class="keyword">import</span> java.security.AccessController;</span><br><span class="line"><span class="keyword">import</span> sun.security.util.SecurityConstants;</span><br><span class="line"><span class="keyword">import</span> sun.net.www.MessageHeader;</span><br></pre></td></tr></table></figure><p>所以要搞清楚这个类,你需要有Java I/O以及集合的基础知识.再者,你也需要了解http协议的一些基础知识.mozilla基金会下的这个http的几篇<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP" target="_blank" rel="noopener">文章</a>,会让你对http协议有个明确的概念.如果想要进行更近一步的了解,这本<a href="https://book.douban.com/subject/10746113/" target="_blank" rel="noopener">HTTP权威指南</a>会进一步打开你的视野.HTTP3协议已然发布的当下,去拥抱H2也是不可少的了,这本<a href="https://book.douban.com/subject/27665112/" target="_blank" rel="noopener">HTTP/2基础教程</a>,会给出一些你想要的答案.</p><p>回过来继续看源码:</p><p>![截屏2020-12-03 下午8.23.10](/Users/jinyulei/Desktop/截屏2020-12-03 下午8.23.10.png)</p><p>HTTP状态码的定义,2XX,3XX,4XX,以及5XX系列.</p><p>![截屏2020-12-03 下午8.30.17](/Users/jinyulei/Desktop/截屏2020-12-03 下午8.30.17.png)</p><p>再倒着往上看,看到的是合法的HTTP方法,依次是 “GET”,”POST”,”HEAD”,”OPTIONS”,”PUT”,”DELETE”,”TRACE”.</p><p>对于熟悉RESTFUL API的开发者来说,最为熟悉的可能是GET,POST,DELETE,PUT,以及跨域时会遇到到的OPTIONS.</p><p>然后是一个是否要重定向的标志位:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">/* do we automatically follow redirects? The default is true. */</span></span><br><span class="line"> <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> followRedirects = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * If &#123;<span class="doctag">@code</span> true&#125;, the protocol will automatically follow redirects.</span></span><br><span class="line"><span class="comment"> * If &#123;<span class="doctag">@code</span> false&#125;, the protocol will not automatically follow</span></span><br><span class="line"><span class="comment"> * redirects.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * This field is set by the &#123;<span class="doctag">@code</span> setInstanceFollowRedirects&#125;</span></span><br><span class="line"><span class="comment"> * method. Its value is returned by the &#123;<span class="doctag">@code</span> getInstanceFollowRedirects&#125;</span></span><br><span class="line"><span class="comment"> * method.</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * Its default value is based on the value of the static followRedirects</span></span><br><span class="line"><span class="comment"> * at HttpURLConnection construction time.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>     java.net.HttpURLConnection#setInstanceFollowRedirects(boolean)</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>     java.net.HttpURLConnection#getInstanceFollowRedirects()</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@see</span>     java.net.HttpURLConnection#setFollowRedirects(boolean)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">boolean</span> instanceFollowRedirects = followRedirects;</span><br></pre></td></tr></table></figure><p>响应状态码以及响应消息体:</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * An &#123;<span class="doctag">@code</span> int&#125; representing the three digit HTTP Status-Code.</span></span><br><span class="line"><span class="comment">     * &lt;ul&gt;</span></span><br><span class="line"><span class="comment">     * &lt;li&gt; 1xx: Informational</span></span><br><span class="line"><span class="comment">     * &lt;li&gt; 2xx: Success</span></span><br><span class="line"><span class="comment">     * &lt;li&gt; 3xx: Redirection</span></span><br><span class="line"><span class="comment">     * &lt;li&gt; 4xx: Client Error</span></span><br><span class="line"><span class="comment">     * &lt;li&gt; 5xx: Server Error</span></span><br><span class="line"><span class="comment">     * &lt;/ul&gt;</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> <span class="keyword">int</span> responseCode = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * The HTTP response message.</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">protected</span> String responseMessage = <span class="keyword">null</span>;</span><br></pre></td></tr></table></figure><p>默认块大小,</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> DEFAULT_CHUNK_SIZE = <span class="number">4096</span>;</span><br></pre></td></tr></table></figure><p>streaming 模式下的内容长度</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">    * The fixed content-length when using fixed-length streaming mode.</span></span><br><span class="line"><span class="comment">    * A value of &#123;<span class="doctag">@code</span> -1&#125; means fixed-length streaming mode is disabled</span></span><br><span class="line"><span class="comment">    * for output.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * &lt;P&gt; &lt;B&gt;<span class="doctag">NOTE:</span>&lt;/B&gt; &#123;<span class="doctag">@link</span> #fixedContentLengthLong&#125; is recommended instead</span></span><br><span class="line"><span class="comment">    * of this field, as it allows larger content lengths to be set.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@since</span> 1.5</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> fixedContentLength = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * The fixed content-length when using fixed-length streaming mode.</span></span><br><span class="line"><span class="comment">    * A value of &#123;<span class="doctag">@code</span> -1&#125; means fixed-length streaming mode is disabled</span></span><br><span class="line"><span class="comment">    * for output.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@since</span> 1.7</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">long</span> fixedContentLengthLong = -<span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * The chunk-length when using chunked encoding streaming mode for output.</span></span><br><span class="line"><span class="comment">    * A value of &#123;<span class="doctag">@code</span> -1&#125; means chunked encoding is disabled for output.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@since</span> 1.5</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">   <span class="keyword">protected</span> <span class="keyword">int</span> chunkLength = -<span class="number">1</span>;</span><br></pre></td></tr></table></figure><p>以及默认为”GET”的method字段.</p><p>然后再从头往下看:</p><p>URLCONNECTION并不支持HTTP2.</p><p>然后姿势很重要,我们需要遵照以下方法.</p><p>通过调用URL的openConnection()的获取一个URLConnection并将其转换为HttpURLConnection.</p><p>准备请求,请求的主要参数是它的URI.请求头中包含了认证、内容类型以及cookie.请求体是可选的,如果请求包含请求体,setDoOutPut()就必须设置为true.传输数据以向getOutputStream()返回的stream的方式完成.</p><p>读取响应体.响应体的的首部,通常包含了响应体的内容类型和大小.修改日期以及会话的cookie.通过经由getInputStream()返回的stream,能够读取到响应体.如果响应没有body,那边方法返回的就是空流.</p><p>断开连接,一旦响应体读取完了,HttpURLConnection就应该通过调用Disconnecting来释放由连接所持有的资源,从而它们能够被关闭或重用.</p>]]></content>
      
      
      <categories>
          
          <category> http </category>
          
      </categories>
      
      
        <tags>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
